### Instructions for Dsp32Mac: TradMES2RND ###

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = results_A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"MvA1ToDregO" dmcDstA1DRegO" = A1 (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"MvA1ToDregO" dmcDstA1DRegO" = A1 (M, S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	local tmp_2x_src_A1extrOp:5;
	tmp_2x_src_A1extrOp = A1 * 0x2;
	dmcDstA1DRegO = tmp_2x_src_A1extrOp:4;
	if (sext(dmcDstA1DRegO) == tmp_2x_src_A1extrOp) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (tmp_2x_src_A1extrOp s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	A0 = results_A0;
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 + results_A0;
	if (!scarry(sadd_src0_cpy_A0accOp, results_A0)) goto <end_sadd_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s< 0x0) goto <end_sadd_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegL) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegL);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = sext(dmcSrc0A0DRegH) * sext(dmcSrc1A0DRegH);
	results_A0 = results_A0 << 0x1;
	local sadd_src0_cpy_A0accOp:5 = A0;
	A0 = A0 - results_A0;
	if (!sborrow(sadd_src0_cpy_A0accOp, results_A0)) goto <end_ssub_sat_A0accOp>;
	A0 = (0x1 << 0x27);
	if (results_A0 s> 0x0) goto <end_ssub_sat_A0accOp>;
	A0 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A0accOp>
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = results_A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"MvA0ToDregE" dmcDstA0DRegE" = A0 (S2RND)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvAndMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMES2RND:^"ParaMvAndMv" dmcDstA0DRegE" = A0 (S2RND), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0x1 & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	local tmp_2x_src_A0extrOp:5;
	tmp_2x_src_A0extrOp = A0 * 0x2;
	dmcDstA0DRegE = tmp_2x_src_A0extrOp:4;
	if (sext(dmcDstA0DRegE) == tmp_2x_src_A0extrOp) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = (0x1 << 0x1f);
	if (tmp_2x_src_A0extrOp s< 0x0) goto <end_strunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x1f) - 0x1);
<end_strunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}



:^Dsp32MacTradMES2RND is dmcM=0x0 ... & Dsp32MacTradMES2RND { build Dsp32MacTradMES2RND; }
:^Dsp32MacTradMES2RND is dmcM=0x1 ... & Dsp32MacTradMES2RND { build Dsp32MacTradMES2RND; delayslot(4); }
