### Instructions for Dsp32Mac: TradMEIU ###

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegL);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegH);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegL);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegH);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = ((0x1 << 0x28) - 0x1);
	if (carry(A1, results_A1)) goto <end_add_sat_A1accOp>;
	A1 = A1 + results_A1;
<end_add_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegL);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * zext(dmcSrc1A1DRegH);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegL);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * zext(dmcSrc1A1DRegH);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = 0x0;
	if ((A1 < results_A1)) goto <end_sub_sat_A1accOp>;
	A1 = A1 - results_A1;
<end_sub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (zext(dmcDstA1DRegO) == results_A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"MvA1ToDregO" dmcDstA1DRegO" = A1 (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	dmcDstA1DRegO = A1:4;
	if (zext(dmcDstA1DRegO) == A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"MvA1ToDregO" dmcDstA1DRegO" = A1 (M, IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x0 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	dmcDstA1DRegO = A1:4;
	if (zext(dmcDstA1DRegO) == A1) goto <end_trunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x20) - 0x1);
<end_trunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 = "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x0 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = results_A0;
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 += "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x1 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = ((0x1 << 0x28) - 0x1);
	if (carry(A0, results_A0)) goto <end_add_sat_A0accOp>;
	A0 = A0 + results_A0;
<end_add_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegL" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x0 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegL & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegL) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegL & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegL") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x0 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegL);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"Mac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegL & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegL 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMac16WithMv" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc0A1DRegH & dmcSrc1A0DRegH & dmcSrc1A1DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMac16WithMvAndMvA1ToDregO" dmcDstA0DRegE" = (A0 -= "dmcSrc0A0DRegH" * "dmcSrc1A0DRegH") (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x2 & dmcH00=0x1 & dmcH10=0x1 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A0DRegH & dmcSrc1A0DRegH 
{
	local results_A0:5 = zext(dmcSrc0A0DRegH) * zext(dmcSrc1A0DRegH);
	A0 = 0x0;
	if ((A0 < results_A0)) goto <end_sub_sat_A0accOp>;
	A0 = A0 - results_A0;
<end_sub_sat_A0accOp>
	dmcDstA0DRegE = results_A0:4;
	if (zext(dmcDstA0DRegE) == results_A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"MvA0ToDregE" dmcDstA0DRegE" = A0 (IU)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcP=0x1 & dmcW1=0x0 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 = "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x0 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	A1 = results_A1;
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 += "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x1 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 + results_A1;
	if (!scarry(sadd_src0_cpy_A1accOp, results_A1)) goto <end_sadd_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s< 0x0) goto <end_sadd_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_sadd_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegL" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x0 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegL & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegL) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegL") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x0 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegL 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegL);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH")"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = sext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	results_A1 = results_A1 << 0x1;
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvA0ToDregEAndMac16WithMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = (A1 -= "dmcSrc0A1DRegH" * "dmcSrc1A1DRegH") (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x2 
	 ; dmcH01=0x1 & dmcH11=0x1 & dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO & dmcSrc0A1DRegH & dmcSrc1A1DRegH 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	local results_A1:5 = zext(dmcSrc0A1DRegH) * sext(dmcSrc1A1DRegH);
	local sadd_src0_cpy_A1accOp:5 = A1;
	A1 = A1 - results_A1;
	if (!sborrow(sadd_src0_cpy_A1accOp, results_A1)) goto <end_ssub_sat_A1accOp>;
	A1 = (0x1 << 0x27);
	if (results_A1 s> 0x0) goto <end_ssub_sat_A1accOp>;
	A1 = ((0x1 << 0x27) - 0x1);
<end_ssub_sat_A1accOp>
	dmcDstA1DRegO = results_A1:4;
	if (sext(dmcDstA1DRegO) == results_A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (results_A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvAndMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = A1"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x0 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}

Dsp32MacTradMEIU:^"ParaMvAndMv" dmcDstA0DRegE" = A0 (IU), "dmcDstA1DRegO" = A1 (M)"
	is dmcSigDsp=0xc & dmcSig=0x0 & dmcMmod=0xc & dmcMm=0x1 & dmcP=0x1 & dmcW1=0x1 & dmcOp1=0x3 
	 ; dmcW0=0x1 & dmcOp0=0x3 & dmcDstA0DRegE & dmcDstA1DRegO 
{
	dmcDstA0DRegE = A0:4;
	if (zext(dmcDstA0DRegE) == A0) goto <end_trunc_A0extrOp>;
	dmcDstA0DRegE = ((0x1 << 0x20) - 0x1);
<end_trunc_A0extrOp>
	dmcDstA1DRegO = A1:4;
	if (sext(dmcDstA1DRegO) == A1) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = (0x1 << 0x1f);
	if (A1 s< 0x0) goto <end_strunc_A1extrOp>;
	dmcDstA1DRegO = ((0x1 << 0x1f) - 0x1);
<end_strunc_A1extrOp>
}



:^Dsp32MacTradMEIU is dmcM=0x0 ... & Dsp32MacTradMEIU { build Dsp32MacTradMEIU; }
:^Dsp32MacTradMEIU is dmcM=0x1 ... & Dsp32MacTradMEIU { build Dsp32MacTradMEIU; delayslot(4); }
