## Set CC conditional bit (CCFlag)
##
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## | 0 | 0 | 0 | 0 | 1 |.i.|....opc....|.g.|.....y.....|.....x.....|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+

### Tokens ###

define token cfgInstr16 (16)
	cfgSig           = (11,15) 
	cfgI             = (10,10) 
	cfgOpc           = ( 7, 9) 
	cfgG             = ( 6, 6) 
	cfgYUImm         = ( 3, 5) 
	cfgYImm          = ( 3, 5) signed
	cfgYDReg         = ( 3, 5) 
	cfgYPReg         = ( 3, 5) 
	cfgXDReg         = ( 0, 2) 
	cfgXPReg         = ( 0, 2) 
;


### Variables ###

attach variables [cfgXDReg cfgYDReg] [R0 R1 R2 R3 R4 R5 R6 R7];
attach variables [cfgXPReg cfgYPReg] [P0 P1 P2 P3 P4 P5 SP FP];


### Instructions ###

cfgName: "CompRegisters" is cfgG=0x0 { }
cfgName: "CCFlagP"       is cfgG=0x1 { }

cfgXval: cfgXDReg is cfgG=0x0 & cfgXDReg { export cfgXDReg; }
cfgXval: cfgXPReg is cfgG=0x1 & cfgXPReg { export cfgXPReg; }

cfgYval: cfgYDReg is cfgI=0x0 & cfgG=0x0 & cfgYDReg { export cfgYDReg; }
cfgYval: cfgYPReg is cfgI=0x0 & cfgG=0x1 & cfgYPReg { export cfgYPReg; }
cfgYval: cfgYImm  is (cfgOpc=0x0 | cfgOpc=0x1 | cfgOpc=0x2) & cfgI=0x1 & cfgYImm 
	{ local imm:4 = sext(cfgYImm:1); export imm; }
cfgYval: cfgYUImm is (cfgOpc=0x3 | cfgOpc=0x4) & cfgI=0x1 & cfgYUImm { local imm:4 = zext(cfgYUImm:1); export imm; }

CompAccAux: "CC = A0 == A1" is cfgOpc=0x5 { CC = (A0 == A1); }
CompAccAux: "CC = A0 < A1"  is cfgOpc=0x6 { CC = (A0 s< A1); }
CompAccAux: "CC = A0 <= A1" is cfgOpc=0x7 { CC = (A0 s<= A1); }

with CCFlag: cfgSig=0x01 {
:^cfgName "CC" = cfgXval == cfgYval        is cfgOpc=0x0 & cfgName & cfgXval & cfgYval {
    CC = (cfgXval == cfgYval);
}
:^cfgName "CC" = cfgXval < cfgYval         is cfgOpc=0x1 & cfgName & cfgXval & cfgYval {
    CC = (cfgXval s< cfgYval);
}
:^cfgName "CC" = cfgXval <= cfgYval        is cfgOpc=0x2 & cfgName & cfgXval & cfgYval {
    CC = (cfgXval s<= cfgYval);
}
:^cfgName "CC" = cfgXval < cfgYval "(UI)"  is cfgOpc=0x3 & cfgName & cfgXval & cfgYval {
    CC = (cfgXval < cfgYval);
}
:^cfgName "CC" = cfgXval <= cfgYval "(UI)" is cfgOpc=0x4 & cfgName & cfgXval & cfgYval {
    CC = (cfgXval <= cfgYval);
}

: "CompAccumulators" CompAccAux is CompAccAux { build CompAccAux; }
}


:^CCFlag is CCFlag { build CCFlag; }