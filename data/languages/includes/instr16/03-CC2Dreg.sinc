## Move CC conditional bit, to and from Dreg (CC2Dreg)
##
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 |..opc..|....reg....|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+

### Tokens ###

define token c2dInstr16 (16)
	c2dSig           = ( 5,15) 
	c2dOpc           = ( 3, 4) 
	c2dReg           = ( 0, 2) 
;


### Variables ###

attach variables c2dReg [R0 R1 R2 R3 R4 R5 R6 R7];


### Instructions ###

MvToCCDesc: "CC = !CC" is epsilon {}

with CC2Dreg: c2dSig=0x010 {
: "CCToDreg" c2dReg = "CC"     is c2dOpc=0x0 & c2dReg { c2dReg = zext(CC); }
: "MvToCC"   "CC" = c2dReg     is c2dOpc=0x1 & c2dReg { CC = (c2dReg != 0); }
: "CCToDreg" c2dReg = "!CC"    is c2dOpc=0x2 & c2dReg { c2dReg = zext(!CC); }
: "MvToCC"   MvToCCDesc        is c2dOpc=0x3 & MvToCCDesc { CC = !CC; }
}


:^CC2Dreg is CC2Dreg { build CC2Dreg; }