## Push or Pop Multiple contiguous registers (PushPopMult)
##
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## | 0 | 0 | 0 | 0 | 0 | 1 | 0 |.d.|.p.|.w.|....dr.....|....pr.....|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+

### Tokens ###

define token ppmInstr16 (16)
	ppmSig           = ( 9,15) 
	ppmD             = ( 8, 8) 
	ppmP             = ( 7, 7) 
	ppmW             = ( 6, 6) 
	ppmDr            = ( 3, 5) 
	ppmPr            = ( 0, 2) 
;


### Instructions ###

PushPopMultDesc00: "[--SP] = (R7:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc00
	is PushPopMultDesc00 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc01: "(R7:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc01
	is PushPopMultDesc01 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x0 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc02: "[--SP] = (R7:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc02
	is PushPopMultDesc02 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc03: "(R7:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc03
	is PushPopMultDesc03 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x1 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc04: "[--SP] = (R7:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc04
	is PushPopMultDesc04 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc05: "(R7:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc05
	is PushPopMultDesc05 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x2 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc06: "[--SP] = (R7:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc06
	is PushPopMultDesc06 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc07: "(R7:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc07
	is PushPopMultDesc07 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x3 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc08: "[--SP] = (R7:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc08
	is PushPopMultDesc08 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc09: "(R7:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc09
	is PushPopMultDesc09 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x4 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc0A: "[--SP] = (R7:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0A
	is PushPopMultDesc0A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc0B: "(R7:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0B
	is PushPopMultDesc0B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x5 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc0C: "[--SP] = (R7:6)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0C
	is PushPopMultDesc0C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x6 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc0D: "(R7:6) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0D
	is PushPopMultDesc0D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x6 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc0E: "[--SP] = (R7:7)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0E
	is PushPopMultDesc0E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x1 & ppmDr=0x7 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
}

PushPopMultDesc0F: "(R7:7) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc0F
	is PushPopMultDesc0F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x0 & ppmW=0x0 & ppmDr=0x7 
{
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc10: "[--SP] = (P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc10
	is PushPopMultDesc10 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc11: "(P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc11
	is PushPopMultDesc11 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc12: "[--SP] = (P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc12
	is PushPopMultDesc12 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc13: "(P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc13
	is PushPopMultDesc13 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc14: "[--SP] = (P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc14
	is PushPopMultDesc14 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc15: "(P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc15
	is PushPopMultDesc15 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc16: "[--SP] = (P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc16
	is PushPopMultDesc16 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc17: "(P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc17
	is PushPopMultDesc17 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc18: "[--SP] = (P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc18
	is PushPopMultDesc18 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc19: "(P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc19
	is PushPopMultDesc19 & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc1A: "[--SP] = (P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1A
	is PushPopMultDesc1A & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x1 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc1B: "(P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1B
	is PushPopMultDesc1B & ppmSig=0x02 & ppmD=0x0 & ppmP=0x1 & ppmW=0x0 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc1C: "[--SP] = (R7:0, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1C
	is PushPopMultDesc1C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc1D: "(R7:0, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1D
	is PushPopMultDesc1D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc1E: "[--SP] = (R7:0, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1E
	is PushPopMultDesc1E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc1F: "(R7:0, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc1F
	is PushPopMultDesc1F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc20: "[--SP] = (R7:0, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc20
	is PushPopMultDesc20 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc21: "(R7:0, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc21
	is PushPopMultDesc21 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc22: "[--SP] = (R7:0, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc22
	is PushPopMultDesc22 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc23: "(R7:0, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc23
	is PushPopMultDesc23 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc24: "[--SP] = (R7:0, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc24
	is PushPopMultDesc24 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc25: "(R7:0, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc25
	is PushPopMultDesc25 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc26: "[--SP] = (R7:0, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc26
	is PushPopMultDesc26 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x0 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R0;
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc27: "(R7:0, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc27
	is PushPopMultDesc27 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x0 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R0 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc28: "[--SP] = (R7:1, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc28
	is PushPopMultDesc28 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc29: "(R7:1, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc29
	is PushPopMultDesc29 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc2A: "[--SP] = (R7:1, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2A
	is PushPopMultDesc2A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc2B: "(R7:1, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2B
	is PushPopMultDesc2B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc2C: "[--SP] = (R7:1, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2C
	is PushPopMultDesc2C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc2D: "(R7:1, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2D
	is PushPopMultDesc2D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc2E: "[--SP] = (R7:1, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2E
	is PushPopMultDesc2E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc2F: "(R7:1, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc2F
	is PushPopMultDesc2F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc30: "[--SP] = (R7:1, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc30
	is PushPopMultDesc30 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc31: "(R7:1, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc31
	is PushPopMultDesc31 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc32: "[--SP] = (R7:1, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc32
	is PushPopMultDesc32 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x1 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R1;
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc33: "(R7:1, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc33
	is PushPopMultDesc33 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x1 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R1 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc34: "[--SP] = (R7:2, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc34
	is PushPopMultDesc34 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc35: "(R7:2, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc35
	is PushPopMultDesc35 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc36: "[--SP] = (R7:2, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc36
	is PushPopMultDesc36 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc37: "(R7:2, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc37
	is PushPopMultDesc37 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc38: "[--SP] = (R7:2, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc38
	is PushPopMultDesc38 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc39: "(R7:2, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc39
	is PushPopMultDesc39 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc3A: "[--SP] = (R7:2, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3A
	is PushPopMultDesc3A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc3B: "(R7:2, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3B
	is PushPopMultDesc3B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc3C: "[--SP] = (R7:2, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3C
	is PushPopMultDesc3C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc3D: "(R7:2, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3D
	is PushPopMultDesc3D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc3E: "[--SP] = (R7:2, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3E
	is PushPopMultDesc3E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x2 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R2;
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc3F: "(R7:2, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc3F
	is PushPopMultDesc3F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x2 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R2 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc40: "[--SP] = (R7:3, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc40
	is PushPopMultDesc40 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc41: "(R7:3, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc41
	is PushPopMultDesc41 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc42: "[--SP] = (R7:3, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc42
	is PushPopMultDesc42 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc43: "(R7:3, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc43
	is PushPopMultDesc43 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc44: "[--SP] = (R7:3, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc44
	is PushPopMultDesc44 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc45: "(R7:3, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc45
	is PushPopMultDesc45 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc46: "[--SP] = (R7:3, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc46
	is PushPopMultDesc46 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc47: "(R7:3, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc47
	is PushPopMultDesc47 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc48: "[--SP] = (R7:3, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc48
	is PushPopMultDesc48 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc49: "(R7:3, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc49
	is PushPopMultDesc49 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc4A: "[--SP] = (R7:3, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4A
	is PushPopMultDesc4A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x3 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R3;
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc4B: "(R7:3, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4B
	is PushPopMultDesc4B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x3 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R3 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc4C: "[--SP] = (R7:4, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4C
	is PushPopMultDesc4C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc4D: "(R7:4, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4D
	is PushPopMultDesc4D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc4E: "[--SP] = (R7:4, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4E
	is PushPopMultDesc4E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc4F: "(R7:4, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc4F
	is PushPopMultDesc4F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc50: "[--SP] = (R7:4, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc50
	is PushPopMultDesc50 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc51: "(R7:4, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc51
	is PushPopMultDesc51 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc52: "[--SP] = (R7:4, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc52
	is PushPopMultDesc52 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc53: "(R7:4, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc53
	is PushPopMultDesc53 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc54: "[--SP] = (R7:4, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc54
	is PushPopMultDesc54 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc55: "(R7:4, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc55
	is PushPopMultDesc55 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc56: "[--SP] = (R7:4, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc56
	is PushPopMultDesc56 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x4 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R4;
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc57: "(R7:4, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc57
	is PushPopMultDesc57 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x4 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R4 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc58: "[--SP] = (R7:5, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc58
	is PushPopMultDesc58 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc59: "(R7:5, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc59
	is PushPopMultDesc59 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc5A: "[--SP] = (R7:5, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5A
	is PushPopMultDesc5A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc5B: "(R7:5, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5B
	is PushPopMultDesc5B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc5C: "[--SP] = (R7:5, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5C
	is PushPopMultDesc5C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc5D: "(R7:5, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5D
	is PushPopMultDesc5D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc5E: "[--SP] = (R7:5, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5E
	is PushPopMultDesc5E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc5F: "(R7:5, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc5F
	is PushPopMultDesc5F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc60: "[--SP] = (R7:5, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc60
	is PushPopMultDesc60 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc61: "(R7:5, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc61
	is PushPopMultDesc61 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc62: "[--SP] = (R7:5, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc62
	is PushPopMultDesc62 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x5 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R5;
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc63: "(R7:5, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc63
	is PushPopMultDesc63 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x5 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
	R5 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc64: "[--SP] = (R7:6, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc64
	is PushPopMultDesc64 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc65: "(R7:6, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc65
	is PushPopMultDesc65 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc66: "[--SP] = (R7:6, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc66
	is PushPopMultDesc66 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc67: "(R7:6, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc67
	is PushPopMultDesc67 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc68: "[--SP] = (R7:6, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc68
	is PushPopMultDesc68 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc69: "(R7:6, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc69
	is PushPopMultDesc69 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc6A: "[--SP] = (R7:6, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6A
	is PushPopMultDesc6A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc6B: "(R7:6, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6B
	is PushPopMultDesc6B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc6C: "[--SP] = (R7:6, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6C
	is PushPopMultDesc6C & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc6D: "(R7:6, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6D
	is PushPopMultDesc6D & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc6E: "[--SP] = (R7:6, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6E
	is PushPopMultDesc6E & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x6 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R6;
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc6F: "(R7:6, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc6F
	is PushPopMultDesc6F & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x6 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
	R6 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc70: "[--SP] = (R7:7, P5:0)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc70
	is PushPopMultDesc70 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x0 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P0;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc71: "(R7:7, P5:0) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc71
	is PushPopMultDesc71 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x0 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	P0 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc72: "[--SP] = (R7:7, P5:1)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc72
	is PushPopMultDesc72 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x1 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P1;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc73: "(R7:7, P5:1) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc73
	is PushPopMultDesc73 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x1 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	P1 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc74: "[--SP] = (R7:7, P5:2)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc74
	is PushPopMultDesc74 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x2 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P2;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc75: "(R7:7, P5:2) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc75
	is PushPopMultDesc75 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x2 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	P2 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc76: "[--SP] = (R7:7, P5:3)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc76
	is PushPopMultDesc76 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x3 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P3;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc77: "(R7:7, P5:3) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc77
	is PushPopMultDesc77 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x3 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	P3 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc78: "[--SP] = (R7:7, P5:4)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc78
	is PushPopMultDesc78 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x4 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P4;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc79: "(R7:7, P5:4) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc79
	is PushPopMultDesc79 & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x4 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	P4 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}

PushPopMultDesc7A: "[--SP] = (R7:7, P5:5)" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc7A
	is PushPopMultDesc7A & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x1 & ppmDr=0x7 & ppmPr=0x5 
{
	SP = SP - 0x4;
	*[ram]:4 SP = R7;
	SP = SP - 0x4;
	*[ram]:4 SP = P5;
}

PushPopMultDesc7B: "(R7:7, P5:5) = [SP++]" is epsilon {}
PushPopMult:^"PushPopMul16" PushPopMultDesc7B
	is PushPopMultDesc7B & ppmSig=0x02 & ppmD=0x1 & ppmP=0x1 & ppmW=0x0 & ppmDr=0x7 & ppmPr=0x5 
{
	P5 = *[ram]:4 SP;
	SP = SP + 0x4;
	R7 = *[ram]:4 SP;
	SP = SP + 0x4;
}



:^PushPopMult is PushPopMult { build PushPopMult; }
