## Jump/Call to 32-bit Immediate (Jump32)
##
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## | 1 | 1 | 0 | 1 | 1 | 1 |.c.| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |rel|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## |.............................immH..............................|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## |.............................immL..............................|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+
## |.....................emotionalSupportBits......................|
## +---+---+---+---|---+---+---+---|---+---+---+---|---+---+---+---+

### Tokens ###

define token jmpInstr16 (16)
	jmpSig           = (10,15) 
	jmpC             = ( 9, 9) 
	jmpMask8z        = ( 1, 8) 
	jmpRel           = ( 0, 0) 
;

define token jmpInstr32 (16)
	jmpImmHUImm      = ( 0,15) 
	jmpImmHSImm      = ( 0,15) signed
;

define token jmpInstr48 (16)
	jmpImmLUImm      = ( 0,15) 
;

define token jmpInstr64 (16)
	jmpEmotionalSupportBits = ( 0,15) 
;


### Instructions ###

Jump32:^"JumpAbs" "JUMP.A "addr
	is jmpSig=0x37 & jmpC=0x0 & jmpMask8z=0x00 & jmpRel=0x0 
	 ; jmpImmHUImm 
	 ; jmpImmLUImm 
	 ; jmpEmotionalSupportBits 
[
	addr = (jmpImmHUImm << 0x10) | jmpImmLUImm;
] {
	goto [*[ram]:4 addr:4];
}

Jump32:^"JumpAbs" "JUMP "addr
	is jmpSig=0x37 & jmpC=0x0 & jmpMask8z=0x00 & jmpRel=0x1 
	 ; jmpImmHSImm 
	 ; jmpImmLUImm 
	 ; jmpEmotionalSupportBits 
[
	addr = (jmpImmHSImm << 0x10) | jmpImmLUImm;
] {
	goto [*[ram]:4 addr:4];
}

Jump32:^"Call" "CALL.A "addr
	is jmpSig=0x37 & jmpC=0x1 & jmpMask8z=0x00 & jmpRel=0x0 
	 ; jmpImmHUImm 
	 ; jmpImmLUImm 
	 ; jmpEmotionalSupportBits 
[
	addr = (jmpImmHUImm << 0x10) | jmpImmLUImm;
] {
	RETS = inst_next;
	call [*[ram]:4 addr:4];
}

Jump32:^"Call" "CALL "addr
	is jmpSig=0x37 & jmpC=0x1 & jmpMask8z=0x00 & jmpRel=0x1 
	 ; jmpImmHSImm 
	 ; jmpImmLUImm 
	 ; jmpEmotionalSupportBits 
[
	addr = (jmpImmHSImm << 0x10) | jmpImmLUImm;
] {
	RETS = inst_next;
	call [*[ram]:4 addr:4];
}



:^Jump32 is Jump32 { build Jump32; }
